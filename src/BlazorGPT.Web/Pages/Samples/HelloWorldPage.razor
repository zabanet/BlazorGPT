@page "/helloworld"
@using BlazorGPT.Pipeline
@inherits SamplePage
@inject IOptions<PipelineOptions> PipelineOptions
@inject KernelService KernelService
@layout EmptyLayout
<h3>Hello World</h3>

<ConversationDisplay Conversation="@Conversation"  Style="height: auto"/>


@code {

    [Inject]
    public ChatWrapper? Chat { get; set; }



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var kernel = await KernelService.CreateKernelAsync();


            Conversation = Conversation.CreateConversation(PipelineOptions.Value.Providers.OpenAI.ChatModel, "You are a helpful assistant", 
                "You are a helpful assistant ", "Write a Hello World in C#. Answer in markdown.");
            StateHasChanged();
            List<QuickProfile> profiles = new List<QuickProfile>();

            profiles.Add(new QuickProfile()
            {
                Content = "Create a tweet about this",
                InsertAt = InsertAt.After,
                
            });

            await Chat!.SendWithPipeline(kernel, Conversation,
                quickProfiles: profiles,
                callback: OnStreamCompletion);
        }
    }
}
