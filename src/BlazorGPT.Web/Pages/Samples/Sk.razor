@page "/sk"
@inherits SamplePage
@using BlazorGPT.Pipeline
@using Microsoft.SemanticKernel
@using Microsoft.SemanticKernel.Plugins.Core
@layout EmptyLayout
<h3>Semantic Kernel</h3>

 

<ConversationDisplay Conversation="@Conversation" Style="height: auto"/>

@code {
#pragma warning disable SKEXP0050
    [Inject]
    public ChatWrapper? Chat { get; set; }

    [Inject]
    public KernelService? KernelService { get; set; }

    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            Conversation = new Conversation();
            // Create a new kernel. This is the main entry point to the Semantic Kernel.
            Kernel = await KernelService!.CreateKernelAsync();


            // This is the system prompt, ie the information that the system wants to share with the user.
            var systemMessage = @"You are an AI assistant that helps people find information.";

            Kernel.ImportPluginFromObject(new TimePlugin(), "time");
            Kernel.ImportPluginFromObject(new HttpPlugin(), "http");
            string userMessage = "Where is Stockholm?";
 

            if (Conversation != null)
            {
                Conversation.AddMessage("system", systemMessage);
                Conversation.AddMessage("user", userMessage);

                StateHasChanged();

                // Conversation =
                await Chat!.SendWithPipeline(Kernel, Conversation, callback: OnStreamCompletion);
                StateHasChanged();

            }
        }
    }

     Kernel? Kernel { get; set; }
 
   

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

 

}