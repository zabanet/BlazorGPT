@page "/"
@using System.Security.Claims
@using Microsoft.Data.SqlClient


@inject NavigationManager NavigationManager
@inject DialogService DialogService

@code {

    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }

    public string? UserId { get; set; } = null!;

    [Inject]
    public SampleDataSeeder SampleDataSeeder { get; set; }

    private async Task SeedSamples()
    {
        var confirm = await DialogService.Confirm("This will add sample Quick Profiles and Scripts. Are you sure you want to continue?", "Confirm", new ConfirmOptions { OkButtonText = "Yes", CancelButtonText = "No" });
        
        if (confirm.HasValue && confirm.Value)
        {
            try
            {
                await SampleDataSeeder.SeedQPDataForUser(UserId);
                await SampleDataSeeder.SeedScriptsDataForUser(UserId);
            }
            catch (Exception e)
            {
                var res = await DialogService.Alert($"Couldn't add samples! Maybe you added them before?", "Dang!", new AlertOptions { OkButtonText = "Ok" });
                return;
            }

            var alert = await DialogService.Alert("Sample Quick Profiles and Scripts have been added.", "Done", new AlertOptions { OkButtonText = "Ok" });

        }

    }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationState != null)
        {
            var authState = await AuthenticationState;
            var user = authState?.User;
            
            if (user?.Identity is not null && user.Identity.IsAuthenticated)
            {
                UserId = user.FindFirstValue(ClaimTypes.NameIdentifier);
            }
        }

    }
}

<div>
    <AuthorizeView>
        <Authorized>

            <RadzenCard Class="col-12 col-md-7 col-lg-6 m-3">

                <RadzenStack>
                    <RadzenText TextStyle="TextStyle.Body1"><RadzenLink Path="/quickprofiles">Quick Profiles</RadzenLink> lets you define and save questions, contexts and instructions.</RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline">Then, when you are ready to ask a question, you can quickly apply the Quick Profiles to your question to enhance the Assistant result and format the response.</RadzenText>
                    <br>
                    <RadzenButton Class="mt-2" Size="ButtonSize.ExtraSmall" Click="@(() => NavigationManager.NavigateTo("/quickprofiles"))">Try Quick profiles</RadzenButton>
                </RadzenStack>
            </RadzenCard>

            <RadzenCard Class="col-12 col-md-6 m-3">
                <RadzenStack>
                    <RadzenText TextStyle="TextStyle.Body1"><RadzenLink Path="/scripts">Scripts</RadzenLink> are a way to ask a question with a series of automated follow up questions. </RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline">This can be very useful for repetitive research work.</RadzenText>
                    <br/>
                    <RadzenButton Class="mt-2" Size="ButtonSize.ExtraSmall" Click="@(() => NavigationManager.NavigateTo("/scripts"))">Try Scripts</RadzenButton>
                </RadzenStack>
            </RadzenCard>

            <RadzenButton class="m-3" Click="@(() => NavigationManager.NavigateTo("/conversation"))">Start new Conversation</RadzenButton>

            <RadzenCard Class="col-12 col-md-7 col-lg-6 m-3">
                <RadzenStack>
                    <RadzenText TextStyle="TextStyle.H6">Samples </RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline">
                        Generate some sample Quick Profiles and Scripts to help you get started.
                    </RadzenText>
                    <br/>
                    <RadzenButton Class="mt-2" ButtonStyle="ButtonStyle.Success" Size="ButtonSize.Small" Click="@(async () => await SeedSamples())">Add samples</RadzenButton>

                </RadzenStack>
            </RadzenCard>
        </Authorized>
    </AuthorizeView>
    
    <Readme/>

</div>