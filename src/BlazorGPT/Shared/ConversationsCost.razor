@using BlazorGPT.Data

Cost @Cost

@code {
    [Inject]
    public IDbContextFactory<BlazorGptDBContext> DbContextFactory { get; set; } = null!;

    [Parameter]
    public string UserId { get; set; }

    public long ContextTokens = 0;
    public long GeneratedTokens = 0;

    //for gpt-4-1106-preview (Turbo)
    const double promptTokenPrice = .01; //per 1K tokens
    const double completionTokenPrice = .03; //per 1K tokens
    decimal totalCost;

    protected override async Task OnInitializedAsync()
    {
        await using var ctx = await DbContextFactory.CreateDbContextAsync();
        var usage = await ctx.UserTokens.SingleOrDefaultAsync(ut => ut.UserId == UserId);

        if (usage is null) return;

        //https://openai.com/pricing#language-models
        ContextTokens = usage.PromptTokens * 2; // * 2 to make some profit
        GeneratedTokens = usage.CompletionTokens * 2; // * 2 to make some profit

        totalCost = (decimal)(ContextTokens / 1000.0 * promptTokenPrice + GeneratedTokens / 1000.0 * completionTokenPrice);
      }

    public string Cost => totalCost.ToString("C");
}